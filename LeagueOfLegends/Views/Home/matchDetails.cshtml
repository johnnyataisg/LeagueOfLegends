@using LeagueOfLegends.Models
@model MatchData

@{
    LeagueOfLegendsStaticDataEntities db = new LeagueOfLegendsStaticDataEntities();

    ViewBag.Title = "Match Details";

    int championId = ViewBag.champion;
    Champion champion = db.Champions.Where(s => s.id == championId).FirstOrDefault();

    double timestamp = Model.gameCreation;
    System.DateTime gameStartTime = new System.DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc);
    gameStartTime = gameStartTime.AddMilliseconds(timestamp).ToLocalTime();

    Queue queue = db.Queues.Where(s => s.id == Model.queueId).FirstOrDefault();

    List<Player> participantIdentities = Model.participantIdentities;
    List<ParticipantPerformance> participantPerformances = Model.participants;
}

<div>
    <h4 style="margin: 0 auto;">@queue.map  @queue.pickType @queue.gameType</h4>
    <img src="~/Images/Champions/Icon/@champion.image" style="height: 80px; width: 80px;"/>
    <h5>@gameStartTime</h5>
    <div id="teamStatsContainer">
        <div class="teamSideContainer">
            <h3>@Model.teams.ElementAt(0).win</h3>
            @for (int i = 0; i < 5; i++)
            {
                Player currentPlayer = participantIdentities.ElementAt(i);
                ParticipantPerformance currentPlayerPerformance = participantPerformances.ElementAt(i);
                int participantSelectedChampionId = currentPlayerPerformance.championId;
                Champion participantSelectedChampion = db.Champions.Where(s => s.id == participantSelectedChampionId).FirstOrDefault();

                String highestAchievedRank = (currentPlayerPerformance.highestAchievedSeasonTier == null) ? "UNRANKED" : currentPlayerPerformance.highestAchievedSeasonTier;

                <div class="teamPlayerTile">
                    <div class="playerNameAndTier">
                        <div>
                            <a href=@Url.Action("SummonerProfile", "Home", new { sName = currentPlayer.player.summonerName })>@currentPlayer.player.summonerName</a>
                            <p>@highestAchievedRank</p>
                        </div>
                    </div>
                    <div class="playerChampionImage">
                        <img src="~/Images/Champions/Icon/@participantSelectedChampion.image" />
                    </div>
                    <div class="playerKDA">
                        <div>
                            <p>@currentPlayerPerformance.stats.kills/@currentPlayerPerformance.stats.deaths/@currentPlayerPerformance.stats.assists</p>
                        </div>
                    </div>
                    <div class="playerStats">
                        <div class="statsContainer">
                            <div class="statsContent">
                                <p>Minions Killed: <span>@currentPlayerPerformance.stats.totalMinionsKilled</span></p>
                                <p>Gold Earned: <span>@currentPlayerPerformance.stats.goldEarned</span></p>
                                <p>Wards Placed: <span>@currentPlayerPerformance.stats.wardsPlaced</span></p>
                            </div>
                        </div>
                    </div>
                    <button target="@currentPlayer.player.summonerName" value="@currentPlayer.player.summonerId" class="btn modal-trigger">Modal</button>
                </div>
            }
        </div>
        <div class="teamSideContainer">
            <h3>@Model.teams.ElementAt(1).win</h3>
            @for (int i = 5; i < 10; i++)
            {
                Player currentPlayer = participantIdentities.ElementAt(i);
                ParticipantPerformance currentPlayerPerformance = participantPerformances.ElementAt(i);
                int participantSelectedChampionId = currentPlayerPerformance.championId;
                Champion participantSelectedChampion = db.Champions.Where(s => s.id == participantSelectedChampionId).FirstOrDefault();

                String highestAchievedRank = (currentPlayerPerformance.highestAchievedSeasonTier == null) ? "UNRANKED" : currentPlayerPerformance.highestAchievedSeasonTier;

                <div class="teamPlayerTile">
                    <div class="playerNameAndTier">
                        <div>
                            <a href=@Url.Action("SummonerProfile", "Home", new { sName = currentPlayer.player.summonerName })>@currentPlayer.player.summonerName</a>
                            <p>@highestAchievedRank</p>
                        </div>
                    </div>
                    <div class="playerChampionImage">
                        <img src="~/Images/Champions/Icon/@participantSelectedChampion.image" />
                    </div>
                    <div class="playerKDA">
                        <div>
                            <p>@currentPlayerPerformance.stats.kills/@currentPlayerPerformance.stats.deaths/@currentPlayerPerformance.stats.assists</p>
                        </div>
                    </div>
                    <div class="playerStats">
                        <div class="statsContainer">
                            <div class="statsContent">
                                <p>Minions Killed: <span>@currentPlayerPerformance.stats.totalMinionsKilled</span></p>
                                <p>Gold Earned: <span>@currentPlayerPerformance.stats.goldEarned</span></p>
                                <p>Wards Placed: <span>@currentPlayerPerformance.stats.wardsPlaced</span></p>
                            </div>
                        </div>
                    </div>
                    <button target="@currentPlayer.player.summonerName" value="@currentPlayer.player.summonerId" class="btn modal-trigger">Modal</button>
                </div>
            }
        </div>
    </div>
    <!-- Modal Structure -->
    <div id="playerStatsModal" class="statsModal">
        <div>
            <h4></h4>
            <p></p>
        </div>
        <div class="statsModalFooter">
            <a href="#" id="closeModalBtn" class="modal-close waves-effect waves-green btn-flat">Close</a>
        </div>
    </div>
</div>